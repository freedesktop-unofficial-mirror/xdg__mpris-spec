<?xml version="1.0" ?>
<node name="/Player_Node" xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <interface name="org.mpris.MediaPlayer2.Player">

    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>
        This interface implements the methods for querying and providing basic
        control over what is currently playing.
      </p>
    </tp:docstring>

    <tp:enum name="Playback_Status" tp:name-for-bindings="Playback_Status" type="s">
      <tp:enumvalue suffix="Playing" value="Playing">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>A track is currently playing.</p>
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Paused" value="Paused">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>A track is currently paused.</p>
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Stopped" value="Stopped">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>There is no track currently playing.</p>
        </tp:docstring>
      </tp:enumvalue>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>A playback state.</p>
      </tp:docstring>
    </tp:enum>

    <tp:enum name="Loop_Status" tp:name-for-bindings="Loop_Status" type="s">
      <tp:enumvalue suffix="None" value="None">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>The playback will stop when there are no more tracks to play</p>
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Track" value="Track">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>The current track will start again from the begining once it has finished playing</p>
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Playlist" value="Paylist">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>The playback loops through a list of tracks</p>
        </tp:docstring>
      </tp:enumvalue>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>A repeat / loop status</p>
      </tp:docstring>
    </tp:enum>

    <tp:simple-type name="Track_Id" type="s" array-name="Track_Id_List">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Unique track identifier.</p>
        <p>
          If the media player implements the TrackList interface and allows
          the same track to appear multiple times in the tracklist,
          this must be unique within the scope of the tracklist.
        </p>
      </tp:docstring>
    </tp:simple-type>

    <tp:simple-type name="Volume" type="d">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Audio volume level on a linear scale between 0.0 and 1.0, inclusive.</p>
        <ul>
          <li>0.0 means mute.</li>
          <li>1.0 is the maximum volume level.</li>
        </ul>
      </tp:docstring>
    </tp:simple-type>

    <tp:simple-type name="Time_In_Us" type="x">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Time in microseconds.</p>
      </tp:docstring>
    </tp:simple-type>

    <method name="Next" tp:name-for-bindings="Next">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Skips to the next track in the tracklist.</p>
        <p>
          If there is no next track (and endless playback and track
          repeat are both off), stop playback.
        </p>
        <p>If playback is paused or stopped, it remains that way.</p>
      </tp:docstring>
    </method>

    <method name="Previous" tp:name-for-bindings="Previous">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Skips to the previous track in the tracklist.</p>
        <p>
          If there is no previous track (and endless playback and track
          repeat are both off), stop playback.
        </p>
        <p>If playback is paused or stopped, it remains that way.</p>
      </tp:docstring>
    </method>

    <method name="Pause" tp:name-for-bindings="Pause">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Pauses playback.</p>
        <p>If playback is already paused, this has no effect.</p>
        <p>
          Calling Play after this should cause playback to start again
          from the same position.
        </p>
      </tp:docstring>
    </method>

    <method name="PlayPause" tp:name-for-bindings="PlayPause">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Pauses playback.</p>
        <p>If playback is already paused, resumes playback.</p>
        <p>If playback is stopped, starts playback.</p>
      </tp:docstring>
    </method>

    <method name="Stop" tp:name-for-bindings="Stop">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Stops playback.</p>
        <p>If playback is already stopped, this has no effect.</p>
        <p>
          Calling Play after this should cause playback to
          start again from the beginning of the track.
        </p>
      </tp:docstring>
    </method>

    <method name="Play" tp:name-for-bindings="Play">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Starts or resumes playback.</p>
        <p>If already playing, this has no effect.</p>
        <p>If there is no track to play, this has no effect.</p>
      </tp:docstring>
    </method>

    <method name="Seek" tp:name-for-bindings="Seek">
      <arg direction="in" type="x" name="Offset" tp:type="Time_In_Us">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>The number of microseconds to seek forward.</p>
        </tp:docstring>
      </arg>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>
          Seeks forward in the current track by the specified number
          of microseconds.
        </p>
        <p>
          A negative value seeks back. If this would mean seeking
          back further than the start of the track, the position
          is set to 0.
        </p>
        <p>
          If the value passed in would mean seeking beyond the end
          of the track, acts like a call to Next.
        </p>
        <p>
          If the <tp:member-ref>CanSeek</tp:member-ref> property is false,
          this has no effect.
        </p>
      </tp:docstring>
    </method>

    <method name="SetPosition" tp:name-for-bindings="Set_Position">
      <arg direction="in" type="s" tp:type="Track_Id" name="TrackId">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>The currently playing track's identifier.</p>
          <p>
            If this does not match the id of the currently-playing track,
            the call is ignored as "stale".
          </p>
        </tp:docstring>
      </arg>
      <arg direction="in" type="x" tp:type="Time_In_Us" name="Position">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>Track position in microseconds.</p>
          <p>This must be between 0 and &lt;track_length&gt;.</p>
        </tp:docstring>
      </arg>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Sets the current track position in milliseconds.</p>
        <p>If the Position argument is less than 0, do nothing.</p>
        <p>
          If the Position argument is greater than the track length,
          do nothing.
        </p>
        <p>
          If the <tp:member-ref>CanSeek</tp:member-ref> property is false,
          this has no effect.
        </p>
      </tp:docstring>
    </method>

    <property name="PlaybackStatus" tp:name-for-bindings="Playback_Status" type="s" tp:type="Playback_Status" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>The current playback status.</p>
        <p>
          May be "Playing", "Paused" or "Stopped".
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
      </tp:docstring>
    </property>

    <property name="LoopStatus" type="s" access="readwrite"
              tp:name-for-bindings="Loop_Status" tp:type="Loop_Status">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>The current loop / repeat status</p>
        <p>May be:
          <ul>
            <li>"None" if the playback will stop when there are no more tracks to play</li>
            <li>"Track" if the current track will start again from the begining once it has finished playing</li>
            <li>"Playlist" if the playback loops through a list of tracks</li>
          </ul>
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
        <p>
          This property is optional, and clients should deal with NotSupported
          errors gracefully.
        </p>
      </tp:docstring>
    </property>

    <property name="Rate" tp:name-for-bindings="Rate" type="d" access="readwrite">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>The current playback rate.</p>
        <p>
          This is a multiplier for the playback rate.  So a value of 0.5
          indicates that playback is happening at half speed, while 1.5 means
          that 1.5 seconds of "track time" is consumed every second.
        </p>
        <p>
          The value must fall in the range described by
          <tp:member-ref>MinimumRate</tp:member-ref> and
          <tp:member-ref>MaximumRate</tp:member-ref>, and must not be 0.0.  If
          playback is paused, the <tp:member-ref>PlaybackStatus</tp:member-ref>
          property should be used to indicate this.  A value of 0.0 should not
          be set by the client.  If it is, the media player should act as
          though <tp:member-ref>Pause</tp:member-ref> was called.
        </p>
        <p>
          If the media player has no ability to play at speeds other than the
          normal playback rate, this must still be implemented, and must
          return 1.0.  The <tp:member-ref>MinimumRate</tp:member-ref> and
          <tp:member-ref>MaximumRate</tp:member-ref> properties must also be
          set to 1.0.
        </p>
        <p>
          Not all values may be accepted by the media player.  It is left to
          media player implementations to decide how to deal with values they
          cannot use; they may either ignore them or pick a "best fit" value.
          Clients are recommended to only use sensible fractions or multiples
          of 1 (eg: 0.5, 0.25, 1.5, 2.0, etc).
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
        <tp:rationale>
          <p>
            This allows clients to display (reasonably) accurate progress bars
            without having to regularly query the media player for the current
            position.
          </p>
        </tp:rationale>
      </tp:docstring>
    </property>

    <property name="Shuffle" tp:name-for-bindings="Shuffle" type="b" access="readwrite">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>
          A value of <strong>false</strong> indicates that playback is
          progressing linearly through a playlist, while <strong>true</strong>
          means playback is progressing through a playlist in some other order.
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
        <p>
          This property is optional, and clients should deal with NotSupported
          errors gracefully.
        </p>
      </tp:docstring>
    </property>

    <property name="Metadata" tp:name-for-bindings="Metadata" type="a{sv}" tp:type="Metadata_Map" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>The metadata of the current element.</p>
        <p>
          If there is a current track, this must have a "trackid" entry
          at the very least, which contains a string that uniquely identifies
          this track.
        </p>
        <p>
          If the media player implements the TrackList interface and allows
          the same track to appear multiple times in the tracklist, the
          "trackid" entry must be unique within the scope of the tracklist.
        </p>
        <p>
          Guidelines for other field names are at
          <a href="http://wiki.xmms2.xmms.se/wiki/MPRIS_Metadata">
            http://wiki.xmms2.xmms.se/wiki/MPRIS_Metadata
          </a>.
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
      </tp:docstring>
    </property>

    <property name="Volume" type="d" tp:type="Volume" tp:name-for-bindings="Volume" access="readwrite">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>The volume level.</p>
        <p>
          When setting, if a negative value is passed, the volume
          should be set to 0.0.  If a value greater than 1 is
          passed, the volume should be set to the maximum level.
        </p>
      </tp:docstring>
    </property>

    <property name="Position" type="x" tp:type="Time_In_Us" tp:name-for-bindings="Position" access="read">
        <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="false"/>
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>
            The current track position in milliseconds, between 0 and
            the 'length' metadata entry (see Metadata).
          </p>
          <p>
            Note: If the media player allows it, the current playback position
            can be changed either the SetPosition method or the Seek method on
            this interface.  If this is not the case, the
            <tp:member-ref>CanSeek</tp:member-ref> property is false, and
            setting this property has no effect and can raise an error.
          </p>
          <p>
            If the playback progresses in a way that is inconstistant with the
            <tp:member-ref>Rate</tp:member-ref> property, the
            <tp:member-ref>Seeked</tp:member-ref> signal is emited.
          </p>
          <p>
            The <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
            is <strong>not</strong> emited when this property changes
          </p>
        </tp:docstring>
    </property>

    <property name="MinimumRate" tp:name-for-bindings="Minimum_Rate" type="d" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>
          The minimum value which the <tp:member-ref>Rate</tp:member-ref>
          property can take.
          Clients should not attempt to set the
          <tp:member-ref>Rate</tp:member-ref> property below this value.
        </p>
        <p>
          Note that even if this value is 0.0 or negative, clients should
          not attempt to set the <tp:member-ref>Rate</tp:member-ref> property
          to 0.0.
        </p>
        <p>This value should always be 1.0 or less.</p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
      </tp:docstring>
    </property>

    <property name="MaximumRate" tp:name-for-bindings="Maximum_Rate" type="d" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>
          The minimum value which the <tp:member-ref>Rate</tp:member-ref>
          property can take.
          Clients should not attempt to set the
          <tp:member-ref>Rate</tp:member-ref> property above this value.
        </p>
        <p>
          This value should always be 1.0 or greater.
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
      </tp:docstring>
    </property>

    <property name="CanGoNext" tp:name-for-bindings="Can_Go_Next" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>
          Whether the client can call the <tp:member-ref>Next</tp:member-ref>
          method on this interface and expect the current track to change.
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
        <tp:rationale>
          <p>
            Clients need to know whether to enable interface elements for
            controlling moving to the next track before calling
            <tp:member-ref>Next</tp:member-ref>.
          </p>
        </tp:rationale>
      </tp:docstring>
    </property>

    <property name="CanGoPrevious" tp:name-for-bindings="Can_Go_Previous" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>
          Whether the client can call the
          <tp:member-ref>Previous</tp:member-ref> method on this interface and
          expect the current track to change.
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
        <tp:rationale>
          <p>
            Clients need to know whether to enable interface elements for
            controlling moving to the previous track before calling
            <tp:member-ref>Previous</tp:member-ref>.
          </p>
        </tp:rationale>

      </tp:docstring>
    </property>

    <property name="CanPlay" tp:name-for-bindings="Can_Play" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Whether playback can be started using
           <tp:member-ref>Play</tp:member-ref> or
           <tp:member-ref>PlayPause</tp:member-ref></p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.</p>
        <tp:rationale>
          <p>
            Clients need to know whether to present interface elements for
            controlling playback before calling those methods.
          </p>
        </tp:rationale>
      </tp:docstring>
    </property>

    <property name="CanPause" tp:name-for-bindings="Can_Pause" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Whether playback can be paused using
           <tp:member-ref>Pause</tp:member-ref> or
           <tp:member-ref>PlayPause</tp:member-ref></p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.</p>
        <tp:rationale>
          <p>
            Clients need to know whether to present interface elements for
            controlling playback before calling those methods.
          </p>
        </tp:rationale>
      </tp:docstring>
    </property>

    <property name="CanSeek" tp:name-for-bindings="Can_Seek" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>
          Whether the client can control the playback position using
          <tp:member-ref>Seek</tp:member-ref> and
          <tp:member-ref>SetPosition</tp:member-ref>.  This may be different for
          different tracks.
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
        <tp:rationale>
          <p>
            Clients need to know whether to present interface elements for
            seeking before calling those methods.
          </p>
        </tp:rationale>
      </tp:docstring>
    </property>

    <property name="CanControlRate" tp:name-for-bindings="Can_Control_Rate" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>
          Whether the client can set the <tp:member-ref>Rate</tp:member-ref>
          property and expect the playback rate to change
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
        <tp:rationale>
          <p>
            Clients need to know whether to present user interface elements for
            playback rate control.
          </p>
        </tp:rationale>
      </tp:docstring>
    </property>

    <property name="CanControlVolume" tp:name-for-bindings="Can_Control_Volume" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="true"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>
          Whether the client can set the <tp:member-ref>Volume</tp:member-ref>
          property and expect the volume to change
        </p>
        <p>
          When this property changes, the
          <literal>org.freedesktop.DBus.Properties.PropertiesChanged</literal>
          signal is emited with the new value.
        </p>
        <tp:rationale>
          <p>
            Clients need to know whether to present user interface elements for
            volume control.
          </p>
        </tp:rationale>
      </tp:docstring>
    </property>

    <property name="CanRepeatTrack" tp:name-for-bindings="Can_Repeat_Track" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="false"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Whether the media player can be set to repeat the current track</p>
        <p>
          This property is not expected to change, as it describes an intrinsic
          capability of the implementation.
        </p>
        <tp:rationale>
          <p>
            Clients need to know whether to present interface elements for
            setting the media player to repeat the current track
          </p>
        </tp:rationale>
      </tp:docstring>
    </property>

    <property name="CanLoop" tp:name-for-bindings="Can_Loop" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="false"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Whether the media player can be set to loop through its tracks</p>
        <p>
          This property is not expected to change, as it describes an intrinsic
          capability of the implementation.
        </p>
        <tp:rationale>
          <p>
            Clients need to know whether to present interface elements for
            setting the media player to loop.
          </p>
        </tp:rationale>
      </tp:docstring>
    </property>

    <property name="CanShuffle" tp:name-for-bindings="Can_Shuffle" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="false"/>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Whether the media player can be set to play randomly</p>
        <p>
          This property is not expected to change, as it describes an intrinsic
          capability of the implementation.
        </p>
        <tp:rationale>
          <p>
            Clients need to know whether to present interface elements for
            setting the media player to play its track in random order
          </p>
        </tp:rationale>
      </tp:docstring>
    </property>

    <signal name="Seeked" tp:name-for-bindings="Seeked">
      <arg name="Position" type="x" tp:type="Time_In_Us">
        <tp:docstring>
          <p>The new position, in microseconds.</p>
        </tp:docstring>
      </arg>
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>
          Indicates that the track position has changed in a way that is
          inconsistant with the current playing state.
        </p>
        <p>When this signal is not received, clients should assume that :</p>
        <ul>
          <li>
            When playing, the position progresses according to the rate property.
          </li>
          <li>When paused, it remains constant.</li>
        </ul>
        <p>
          This signal does not need to be emitted when playback starts
          or when the track changes, unless the track is starting at an
          unexpected position. An expected position would be the last
          known one when going from Paused to Playing, and 0 when going from
          Stopped to Playing.
        </p>
      </tp:docstring>
    </signal>

  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
